{"/deployment":{"title":"Deployment","data":{"":"The project is set up to be easily deployed to Fly.io, so this guide will explain this workflow.","prerequisites#Prerequisites":"Create an account at Fly.io.\nDownload flyctl: Fly.io command line tool\nAuthenticate with flyctl auth login\nIn the root of the project run flyctl launch --no-deploy. This will create prompt you to create an application on Fly.io with the information provided in the fly.toml.\nYou will be asked if you want to update these settings. Here you can choose a server location that is more relevant. Ensure that the port is set to 8080.","tip#Tip":"You can use the following commands to generate your GHOST_CONTENT_API_KEY and JWT_SECRET\n# GHOST_CONTENT_API_KEY - follows format Ghost generates\nnode -e \"console.log(require('crypto').randomBytes(13).toString('hex'))\"\n# JWT_SECRET\nnode -e \"console.log(require('crypto').randomBytes(32).toString('hex'))\"","github-actions#Github Actions":"For deployment through GitHub Actions:\nGet Deploy API Token: Navigate to the newly created application in the Fly.io dashboard and get a deploy token.\nSet Secrets: Configure necessary secrets in your GitHub repository settings.\nManually trigger by going to Actions tab and selecting Fly Deploy. Click Run workflow and enter the branch name to deploy.\nYou can update this action to trigger on push to main by changing the on section of the workflow file to push: [main]","command-line#Command Line":"For command line deployment:","set-secrets#Set Secrets":"Configure necessary environment secrets:\nflyctl secrets set GHOST_CONTENT_API_KEY=\"my-api-key-value\" \\\n   OWNER_EMAIL=\"my-email-value\" \\\n   OWNER_PASSWORD=\"my-password-value\" \\\n   MAILGUN_DOMAIN=\"somedomain\" \\\n   MAILGUN_API_KEY=\"somekey\" \\\n   MAILGUN_BASE_URL=\"mailgunbase\" \\\n   JWT_SECRET=\"somejwtsecret\" \\\n   SITE_TITLE=\"My Site\" \\\n   SITE_DESCRIPTION=\"My website\" \\\n   OWNER_NAME=\"Admin\" \\\n   OWNER_SLUG=\"admin\" \\\n   BLOG_URL=\"https://mysite.com\" \\\n   COMMENT_SETTINGS=\"all\"","deploy#Deploy":"Deploy your application with environment variables:\nflyctl deploy","custom-domains-and-ssl#Custom Domains and SSL":"More details here\nList your app ip addreses with flyctl ips list.\nCreate SSL certificates.\nflyctl certs create mysite.com\nflyctl certs create www.mysite.com\nUse the ipv4 address to create an A record in your DNS provider, and the ipv6 address to create a AAAA record. Create a CNAME record for www."}},"/features":{"title":"Feature Overview","data":{"implemented#Implemented":"Authentication\nPosts\nPages\nPreviews\nComments\nReplies\nLikes\nNewsletters","not-implemented#Not Implemented":"Payment-gated Content"}},"/":{"title":"Welcome","data":{"":"Welcome to the documentation website for GhostRemix. GhostRemix is an open source project by Mikan Labs that uses the popular blog Ghost as a headless CMS with Remix.We built GhostRemix for two reasons. We thought Ghost could provide a good foundation for the kind of blog we wanted to build, and we saw issues developers experienced with self-hosting and headless setups and thought we could help.\nIf you want to know more about some of the design decisions, check out this post.We built this project to be easy to extend and deploy. If you find it useful, we'd appreciate it if you gave us a ⭐.To get started with GhostRemix start here. For a full list of features check here.If you just want an easy way to work with and deploy vanilla Ghost, we've got you covered here."}},"/tips":{"title":"Tips","data":{"useful-flyctl-commands#Useful flyctl commands":"Pause appliciation with fly scale count 0\nSSH into container with flyctl ssh console"}},"/local-development":{"title":"Local Development","data":{"":"Find the code here.","dependencies#Dependencies":"Before you begin local development, ensure that the following dependencies are installed:\nNPM: A package manager for JavaScript, used to install and manage project dependencies.\nDocker: A platform for developing, shipping, and running applications in isolated environments (containers).\nTilt: An essential tool for managing microservice development with support for Docker.","local-development-setup#Local Development Setup":"To set up your local development environment, follow these steps:","get-the-code#Get the code":"Use the template to create your own repository.","github-ui#GitHub UI":"Navigate to the repository, click Use this template, and follow the instructions.","github-cli#GitHub CLI":"Get the GitHub CLI\n# Step 1: Clone the template repository\ngit clone https://github.com/mikab-laboratory/ghost-remix.git new-project\ncd new-project\n# Step 2: Create a new repository on GitHub\ngh repo create username/new-project --private --source=.\n# Step 3: Push the cloned contents to the new repository\ngit push --set-upstream origin main","mailgun#Mailgun":"You don't need Mailgun to get started, but you'll need for email-based workflows like member sign up.\nDon't worry about the $35 a month price tag, immediately after signing up for the trial, you can downgrade to the flex plan.\nCreate Mailgun account.\nNavigate to Sending -> Domains. You should see a test domain that looks like sandbox1234567890abcdef1234567890ab.mailgun.org\nAdd your email as an authorized recipient.\nScroll down and select API Keys. Create a new API key and copy the key.\nFind the correct base URL here.","create-an-env-file#Create an env file":"You'll need to create a .env file in the project root, using .env.example as a guide.","start-tilt#Start Tilt":"This will install dependencies, generate a prisma client, and start all services.\ntilt up","seed#Seed":"Use the Seed button in the Ghost section of the Tilt UI to populate basic data.\nThe production script seeds an owner and basic settings. The development script includes posts and comments.\nIf you want to inspect the database, you can manually trigger a GUI from the Tilt UI.","engine#Engine":"The Node engine is set to 18.19 in package.json to match the production runtime. This follows the Ghost team's advice. You can find more information here.\nUsing a different version locally shouldn't be an issue, but you will see a warning when you run npm install. If you want to use this version in development, you can use a tool like nvm to manage multiple Node versions.","theme#Theme":"You can change the theme colors in app/theme/theme.ts.","favicon#Favicon":"You can replace the favicon.ico with your own in the public folder. If you are using a PNG, you will need to add <link rel=\"icon\" href=\"/favicon.png\" type=\"image/png\" /> to the <head> component under <Meta/> in the root.tsx file. If you are unsure about turning your logo into a favicon, we used favicon.io to do it for free.","pages#Pages":"Published pages are automatically added to the menu in the navigation bar.","test-docker-build#Test Docker Build":"Ensure your Docker build is correctly configured:","build#Build":"Execute the build process:\nmake all","cleanup#Cleanup":"After testing, clean up the build environment:\nmake clean-all"}},"/vanilla-ghost":{"title":"Ghost Easy Deploy","data":{"":"Easily deploy Ghost to Fly.ioFind the code here.","table-of-contents#Table of Contents":"Ghost Easy Deploy\nDependencies\nLocal Development\nGet the code\nGitHub UI\nGitHub CLI\nMailgun\nBasics\nTest Docker Build\nDeploy to Fly.io\nGitHub Actions\nCommand Line\nCustom Domains and SSL","dependencies#Dependencies":"NPM\nDocker\nTilt\nflyctl","local-development#Local Development":"","get-the-code#Get the code":"Use the template to create your own repository.","github-ui#GitHub UI":"Navigate to the repository, click Use this template, and follow the instructions.","github-cli#GitHub CLI":"Get the GitHub CLI\n# Step 1: Clone the template repository\ngit clone https://github.com/mikab-laboratory/ghost-easy-deploy.git new-project\ncd new-project\n# Step 2: Create a new repository on GitHub\ngh repo create username/new-project --private --source=.\n# Step 3: Push the cloned contents to the new repository\ngit push --set-upstream origin main","mailgun#Mailgun":"You don't need Mailgun to get started, but you'll need for email-based workflows like member sign up.Don't worry about the $35 a month price tag, immediately after signing up for the trial, you can downgrade to the flex plan.\nCreate Mailgun account.\nNavigate to Sending -> Domains. You should see a test domain that looks like sandbox1234567890abcdef1234567890ab.mailgun.org\nAdd your email as an authorized recipient.\nScroll down and select API Keys. Create a new API key and copy the key.\nFind the correct base URL here.","basics#Basics":"Create .env file in root directory, using .env.example as a template.\nUse tilt up to install dependencies, generate a prisma client, and start services.\nSeed database with the button in Ghost section of the Tilt UI.\nThe production script seeds an owner and basic settings. The development script includes posts and comments.\nIf you want to inspect the database, you can manually trigger a GUI from the Tilt UI.\nThe Node engine is set to 18.19 in package.json to match the production runtime. This follows the Ghost team's advice. You can find more information here. Using a different version locally shouldn't be an issue, but you will see a warning when you run npm install. If you want to use this version in development, you can use a tool like nvm to manage multiple Node versions.","test-docker-build#Test Docker Build":"Build image and run container with make all.\nClean image and container with make clean-all.","deploy-to-flyio#Deploy to Fly.io":"","prerequisites#Prerequisites":"Create Fly.io account.\nAuthenticate with flyctl auth login.\nCreate app with flyctl launch --no-deploy.","github-actions#GitHub Actions":"Navigate to the newly created application in the Fly.io dashboard and get a deploy token.\nSet secrets in GitHub repository settings.\nManually trigger by going to Actions tab and selecting Fly Deploy. Click Run workflow and enter the branch name to deploy.\nYou can update this action to trigger on push to main by changing the on section of the workflow file to push: [main]","command-line#Command Line":"Set secrets\nflyctl secrets set GHOST_CONTENT_API_KEY=\"my-api-key-value\" \\\n   OWNER_EMAIL=\"my-email-value\" \\\n   OWNER_PASSWORD=\"my-password-value\" \\\n   MAILGUN_DOMAIN=\"somedomain\" \\\n   MAILGUN_API_KEY=\"somekey\" \\\n   MAILGUN_BASE_URL=\"mailgunbase\" \\\n   JWT_SECRET=\"somejwtsecret\" \\\n   SITE_TITLE=\"My Site\" \\\n   SITE_DESCRIPTION=\"My website\" \\\n   OWNER_NAME=\"Admin\" \\\n   OWNER_SLUG=\"admin\" \\\n   BLOG_URL=\"https://mysite.com\" \\\n   COMMENT_SETTINGS=\"all\"\nDeploy\nflyctl deploy","custom-domains-and-ssl#Custom Domains and SSL":"More details here\nList your app ip addreses with flyctl ips list.\nCreate SSL certificates.\nflyctl certs create mysite.com\nflyctl certs create www.mysite.com\nUse the ipv4 address to create an A record in your DNS provider, and the ipv6 address to create a AAAA record. Create a CNAME record for www."}}}